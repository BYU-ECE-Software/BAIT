generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Conversation {
  Conversation_ID Int       @id @default(autoincrement())
  User_ID         Int
  Campaign_ID     Int
  Character_ID    Int
  User            User      @relation(fields: [User_ID], references: [User_ID], onUpdate: Restrict, map: "Conversation_ibfk_1")
  Message         Message[]
  sentfrom        String

  @@index([User_ID], map: "User_ID")
}

model Intel {
  Intel_Record_ID Int  @id @default(autoincrement())
  Campaign_ID     Int
  Character_ID    Int
  Intel_ID        Int
  User_ID         Int
  User            User @relation(fields: [User_ID], references: [User_ID], onUpdate: Restrict, map: "Intel_ibfk_1")

  @@index([User_ID], map: "User_ID")
}

model Message {
  Message_ID      Int          @id @default(autoincrement())
  User_Sent       Boolean?     @default(false)
  Message         String       @db.Text
  Timestamp       DateTime
  Conversation_ID Int
  Conversation    Conversation @relation(fields: [Conversation_ID], references: [Conversation_ID], onUpdate: Restrict, map: "Message_ibfk_1")

  @@index([Conversation_ID], map: "Conversation_ID")
}

model Session {
  Token      String   @id @db.VarChar(255)
  Expiration DateTime @db.Date
  User_ID    Int
  User       User     @relation(fields: [User_ID], references: [User_ID], onUpdate: Restrict, map: "Session_ibfk_1")

  @@index([User_ID], map: "User_ID")
}

model User {
  User_ID      Int            @id @default(autoincrement())
  Password     String         @db.VarChar(255)
  Name         String         @db.VarChar(100)
  Email        String         @unique(map: "Email") @db.VarChar(255)
  Conversation Conversation[]
  Intel        Intel[]
  Session      Session[]
}
